library(readxl)
Confidence_Interval <- read_excel("Confidence Interval.R")
library(readxl)
Confidence_Interval <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Confidence Interval.xlsx")
View(Confidence_Interval)
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2020
confidence_interval <- t.test(Confidence_Interval$Mean_Years)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2020: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2010
ci <- t.test(Confidence_Interval$`Mean Before`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2010: [" , ci[1], " ,", ci[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 2011 to 2020
cfi <- t.test(Confidence_Interval$`Mean After`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 2011 to 2020: [" , cfi[1], " ,", cfi[2], "]\n")
a <- Confidence_Interval$`Mean Before`
b <- Confidence_Interval$`Mean After`
mean_till2010 <- mean(a)
mean_from2011 <- mean(b)
library(readxl)
Confidence_Interval <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Confidence Interval.xlsx")
View(Confidence_Interval)
#Installing the package ggplot2
install.packages("ggplot2")
library(ggplot2)
#To display the head elements in the datset
head(Confidence_Interval)
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2020
confidence_interval <- t.test(Confidence_Interval$Mean_Years)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2020: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2010
ci <- t.test(Confidence_Interval$`Mean Before`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2010: [" , ci[1], " ,", ci[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 2011 to 2020
cfi <- t.test(Confidence_Interval$`Mean After`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 2011 to 2020: [" , cfi[1], " ,", cfi[2], "]\n")
#To display the head elements in the datset
head(Confidence_Interval)
confidence_interval <- t.test(Confidence_Interval$Mean_Years)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2020: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
ci <- t.test(Confidence_Interval$`Mean Before`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2010: [" , ci[1], " ,", ci[2], "]\n")
cfi <- t.test(Confidence_Interval$`Mean After`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 2011 to 2020: [" , cfi[1], " ,", cfi[2], "]\n")
a <- c(236373.9844, 237627.46, 237201.193, 239002.3244, 241252.3868, 244743.4227, 246336.9012, 245254.994, 246342.7333, 247544.3339, 250824.2181, 251239.1129, 252424.9848, 258613.7587, 264890.5129, 270431.2252, 274171.8668, 278161.4003, 280912.8725, 279800.8753, 286761.5533)
mean_till2010 = mean(a)
b<- c(290753.8074, 293272.9248, 293374.6321, 296087.5993, 297660.4389, 298392.8332, 302229.9527, 306816.8572, 309252.419, 305831.4083)
mean_from2011 = mean(b)
#To calculate standard deviation
sd_till2010 <- sd(a)
sd_from2011 <- sd(b)
#To calculate length or sample size
ss_till2010 <- length(a)
ss_from2011 <- length(b)
#To calculate the standard error of difference between means
error <- sqrt((sd_till2010^2 / ss_till2010)- (sd_from2011^2/ss_from2011))
#To calculate degree of freedom
dof <- ss_till2010 + ss_from2011 -2
#To set a confidence Interval
cl<- 0.95
#To calculate margin of error
moe <- -qt((1+0.95)/2,29)*error
#To calculate the confidence interval
confidence_interval <- c(mean_till2010 - mean_from2011 - moe, mean_till2010 + mean_from2011 + moe)
#Print the confidence interval
cat("Confidence Interval: [", confidence_interval[1], ",", confidence_interval[2],"]\n")
library(readxl)
Confidence_Proportions <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Confidence Proportions.xlsx")
View(Confidence_Proportions)
b <- 13
#Total number of years under consideration
total <- 31
#To calculate the sample proportion
sample_proportion <- b/total
#To calculate confidence interval of proportions by selecting 95% confidence interval
confidence_interval <- prop.test(b,total, conf.level = 0.95)$conf.int
#To print the confidence interval
cat("Confidence Interval: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
a_china <- 16
#Total number of years under consideration
total_china <- 31
#To calculate the sample proportion
sample_proportion <- a_china/total_china
#To calculate confidence interval of proportions by selecting 95% confidence interval
ci <- prop.test(a_china,total_china, conf.level = 0.95)$conf.int
#To print the confidence interval
cat("Confidence Interval: [" , ci[1], " ,", ci[2], "]\n")
library(readxl)
Confidence_Interval <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Confidence Interval.xlsx")
View(Confidence_Interval)
library(readxl)
Confidence_Proportions <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Confidence Proportions.xlsx")
View(Confidence_Proportions)
library(readxl)
Hypothesis_Testing <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Hypothesis Testing.xlsx")
View(Hypothesis_Testing)
library(readxl)
Probability_Distribution <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Probability Distribution.xlsx")
View(Probability_Distribution)
library(readxl)
Probability_Distribution <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Probability Distribution.xlsx")
View(Probability_Distribution)
library(readxl)
Project_Dataset <- read_excel("~/Documents/NEU_Sem 1_Projects/P&S/Project Dataset.xlsx")
View(Project_Dataset)
#Installing the package ggplot2
install.packages("ggplot2")
library(ggplot2)
#To display the head elements in the datset
head(Confidence_Interval)
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2020
confidence_interval <- t.test(Confidence_Interval$Mean_Years)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2020: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 1990 to 2010
ci <- t.test(Confidence_Interval$`Mean Before`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 1990 to 2010: [" , ci[1], " ,", ci[2], "]\n")
#Calculate the confidence interval for Mean of Methane emissions for each year from 2011 to 2020
cfi <- t.test(Confidence_Interval$`Mean After`)$conf.int
#Print the confidence interval
cat("Confidence Interval for Mean of Methane emissions from 2011 to 2020: [" , cfi[1], " ,", cfi[2], "]\n")
#Installing the package ggplot2
install.packages("ggplot2")
library(ggplot2)
#To display the head elements in the datset
head(Confidence_Interval)
#Calculate means
a <- c(236373.9844, 237627.46, 237201.193, 239002.3244, 241252.3868, 244743.4227, 246336.9012, 245254.994, 246342.7333, 247544.3339, 250824.2181, 251239.1129, 252424.9848, 258613.7587, 264890.5129, 270431.2252, 274171.8668, 278161.4003, 280912.8725, 279800.8753, 286761.5533)
mean_till2010 = mean(a)
b<- c(290753.8074, 293272.9248, 293374.6321, 296087.5993, 297660.4389, 298392.8332, 302229.9527, 306816.8572, 309252.419, 305831.4083)
mean_from2011 = mean(b)
#To calculate standard deviation
sd_till2010 <- sd(a)
sd_from2011 <- sd(b)
#To calculate length or sample size
ss_till2010 <- length(a)
ss_from2011 <- length(b)
#To calculate the standard error of difference between means
error <- sqrt((sd_till2010^2 / ss_till2010)- (sd_from2011^2/ss_from2011))
#To calculate degree of freedom
dof <- ss_till2010 + ss_from2011 -2
#To set a confidence Interval
cl<- 0.95
#To calculate margin of error
moe <- -qt((1+0.95)/2,29)*error
#To calculate the confidence interval
confidence_interval <- c(mean_till2010 - mean_from2011 - moe, mean_till2010 + mean_from2011 + moe)
#Print the confidence interval
cat("Confidence Interval: [", confidence_interval[1], ",", confidence_interval[2],"]\n")
install.packages("ggplot2")
#Confidence interval of proportions for Methane emissions in USA from 1990-2020
#Total number of years whose methane emissions is less than mean of methane emissions
b <- 13
#Total number of years under consideration
total <- 31
#To calculate the sample proportion
sample_proportion <- b/total
#To calculate confidence interval of proportions by selecting 95% confidence interval
confidence_interval <- prop.test(b,total, conf.level = 0.95)$conf.int
#To print the confidence interval
cat("Confidence Interval: [" , confidence_interval[1], " ,", confidence_interval[2], "]\n")
#Confidence interval of proportions for Methane emissions in China from 1990-2020
#Total number of years whose methane emissions is less than mean of methane emissions
a_china <- 16
#Total number of years under consideration
total_china <- 31
#To calculate the sample proportion
sample_proportion <- a_china/total_china
#To calculate confidence interval of proportions by selecting 95% confidence interval
ci <- prop.test(a_china,total_china, conf.level = 0.95)$conf.int
#To print the confidence interval
cat("Confidence Interval: [" , ci[1], " ,", ci[2], "]\n")
#Hypothsis testing for Methane emissions
#Two Sided Test: Difference of means of Methane emissions from 1990-2010 & 2011-2020
#H0: Difference of means for 1990-2020 & 2011-2020 methane emissions is equal to zero
#H1: Difference of means for 1990-2020 & 2011-2020 methane emissions is not equal to zero
result <- t.test(Hypothesis_Testing$`Methane Mean Before`, Hypothesis_Testing$`Methane Mean After`, alternative= "two.sided")
print(result)
#Left Tailed Test: Difference of means of Methane emissions from 1990-2010 & 2011-2020
#H0: Mean for 1990-2020 methane emissions is greater than or equal to methane emissions for 2011-2020
#H1: Mean for 1990-2010 methane emissions is less than mean for 2011-2020 methane emissions
result <- t.test(Hypothesis_Testing$`Methane Mean Before`, Hypothesis_Testing$`Methane Mean After`, alternative = "less")
print(result)
#Right Tailed Test
#H0: Mean for 1990-2020 methane emissions is less than or equal to methane emissions for 2011-2020
#H1: Mean for 1990-2010 methane emissions is greater than mean for 2011-2020 methane emissions
result <- t.test(Hypothesis_Testing$`Methane Mean Before`, Hypothesis_Testing$`Methane Mean After`, alternative = "greater")
print(result)
#Create a histogram plot for Mean of temperature by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Mean_Temperature))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Mean Temperatures from 1990-2020", x="Temperature", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
histdata <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- histdata$count / sum(histdata$count)
desiredvalue <- 12
desiredprobability <- 1- sum(probabilities[hist_data$x < desiredvalue])
#Create a histogram plot for Variance of Methane Emissions by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Variance_Methane))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Variance of Methane emissions from 1990-2020", x="Methane emissions", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
hist_data <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- hist_data$count / sum(hist_data$count)
desired_value <- 8e+11
desired_probability <- 1 - sum(probabilities[hist_data$x < desired_value])
cat("Probability of Variance of Methane emissions >= ", desired_value, ": ", desired_probability, "\n")
#Create a histogram plot for Variance of NO Emissions by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Variance_NO))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Variance of NO emissions from 1990-2020", x="NO emissions", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
hist_data <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- hist_data$count / sum(hist_data$count)
desired_value <- 8e+10
desired_probability <- 1 - sum(probabilities[hist_data$x < desired_value])
cat("Probability of Variance of NO emissions >= ", desired_value, ": ", desired_probability, "\n")
#Create a histogram plot for Mean of temperature by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Mean_Temperature))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Mean Temperatures from 1990-2020", x="Temperature", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
histdata <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- histdata$count / sum(histdata$count)
desiredvalue <- 12
desiredprobability <- 1- sum(probabilities[hist_data$x < desiredvalue])
cat("Probability of Mean Temperature >=", desiredvalue, ":", desiredprobability, "\n")
#Create a histogram plot for Mean of CO2 Emissions by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Mean_CO2))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Mean CO2 emissions from 1990-2020", x="CO2 emissions", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
hist_data <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- hist_data$count / sum(hist_data$count)
desired_value <- 1000000
desired_probability <- 1 - sum(probabilities[hist_data$x < desired_value])
cat("Probability of Mean CO2 emissions >= ", desired_value, ": ", desired_probability, "\n")
#Create a histogram plot for Variance of Methane Emissions by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Variance_Methane))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Variance of Methane emissions from 1990-2020", x="Methane emissions", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
hist_data <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- hist_data$count / sum(hist_data$count)
desired_value <- 8e+11
desired_probability <- 1 - sum(probabilities[hist_data$x < desired_value])
cat("Probability of Variance of Methane emissions >= ", desired_value, ": ", desired_probability, "\n")
#Create a histogram plot for Variance of NO Emissions by creating 30 bins
histogram_plot <- ggplot(Probability_Distribution, aes(x=Variance_NO))+
geom_histogram(fill="orange", colour="black", bins = 30)+
labs(title = "Histogram for Variance of NO emissions from 1990-2020", x="NO emissions", y="Frequency")
print(histogram_plot)
#To identify the probability distribution for a desired value
hist_data <- ggplot_build(histogram_plot)$data[[1]]
probabilities <- hist_data$count / sum(hist_data$count)
desired_value <- 8e+10
desired_probability <- 1 - sum(probabilities[hist_data$x < desired_value])
cat("Probability of Variance of NO emissions >= ", desired_value, ": ", desired_probability, "\n")
